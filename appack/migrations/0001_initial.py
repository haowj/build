# Generated by Django 2.0.2 on 2018-08-29 09:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='build_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(default='', max_length=50, verbose_name='操作人')),
                ('build_reason', models.TextField(default='', max_length=200, verbose_name='构建原因')),
                ('build_tag', models.TextField(default='', max_length=200, verbose_name='构建版本')),
                ('build_result', models.TextField(default='', max_length=1000, verbose_name='构建结果')),
                ('build_status', models.TextField(default='', max_length=200, verbose_name='构建状态码')),
                ('comment', models.CharField(default='', max_length=200, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '插件-构建日志',
                'verbose_name_plural': '插件-构建日志',
            },
        ),
        migrations.CreateModel(
            name='dev_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('面板AP', '面板AP'), ('桌面二合一', '桌面二合一'), ('三合一', '三合一'), ('四合一', '四合一'), ('吸顶AP', '吸顶AP'), ('AC路由网关', 'AC路由网关'), ('光猫', '光猫'), ('嗅探光猫', '嗅探光猫'), ('嗅探2合1', '嗅探2合1')], help_text='类型', max_length=50, verbose_name='类型')),
                ('zy_model', models.CharField(blank=True, help_text='中建智云型号', max_length=50, unique=True, verbose_name='中建智云型号')),
                ('oem_model', models.CharField(blank=True, help_text='厂商型号', max_length=50, verbose_name='厂商型号')),
                ('old_model', models.CharField(blank=True, help_text='老型号', max_length=50, verbose_name='老型号')),
                ('comment', models.CharField(blank=True, default=None, help_text='备注', max_length=200, null=True, verbose_name='备注')),
                ('user', models.CharField(help_text='操作人', max_length=30, verbose_name='操作人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '型号-设备型号对照表',
                'verbose_name_plural': '型号-设备型号对照表',
            },
        ),
        migrations.CreateModel(
            name='oem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oem_name', models.CharField(blank=True, help_text='厂商名称', max_length=50, verbose_name='厂商名称')),
                ('oem_code', models.CharField(blank=True, help_text='厂商名称缩写', max_length=50, verbose_name='厂商编码')),
                ('comment', models.CharField(blank=True, default=None, help_text='备注', max_length=200, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '厂商-名称及编码',
                'verbose_name_plural': '厂商-名称及编码',
            },
        ),
        migrations.CreateModel(
            name='pack_list_contorl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('superd_version', models.CharField(default='1.0', help_text='插件版本', max_length=32, verbose_name='插件版本')),
                ('docking_solution', models.CharField(choices=[('1.0', '1.0'), ('1.5', '1.5'), ('2.0', '2.0'), ('2.5', '2.5'), ('3.0', '3.0')], default='1.0', help_text='对接方案', max_length=32, verbose_name='对接方案')),
                ('pack_type', models.CharField(choices=[('gzip', 'gzip'), ('lzma', 'lzma')], help_text='压缩方式', max_length=30, verbose_name='压缩方式')),
                ('pack_content', models.CharField(blank=True, help_text='压缩包内容描述', max_length=500, null=True, verbose_name='压缩包内容描述')),
                ('package', models.FileField(help_text='插件包', upload_to='upload/package/%Y/%m/%d', verbose_name='插件包')),
                ('download_url', models.CharField(blank=True, help_text='下载地址', max_length=100, null=True, verbose_name='下载地址')),
                ('user', models.CharField(help_text='操作人', max_length=50, verbose_name='操作人')),
                ('build_time', models.CharField(blank=True, help_text='构建时间', max_length=50, null=True, verbose_name='构建时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('dev_model_id', models.ForeignKey(help_text='设备型号id', on_delete=django.db.models.deletion.CASCADE, related_name='plc_dev_model_id', to='appack.dev_model')),
            ],
            options={
                'verbose_name': '插件包-结果列表',
                'verbose_name_plural': '插件包-结果列表',
            },
        ),
        migrations.CreateModel(
            name='release_plug_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_model', models.CharField(max_length=50, verbose_name='设备型号')),
                ('user', models.CharField(max_length=50, verbose_name='操作人')),
                ('plug_name', models.CharField(max_length=50, verbose_name='插件文件名称')),
                ('plug_md5', models.CharField(max_length=100, verbose_name='插件的md5值')),
                ('version', models.CharField(blank=True, max_length=50, verbose_name='上线版本号')),
                ('comment', models.CharField(blank=True, max_length=500, verbose_name='上线说明')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '插件-发布上线操作日志',
                'verbose_name_plural': '插件-发布上线操作日志',
            },
        ),
        migrations.CreateModel(
            name='sapiloaderVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sapiloader_file', models.FileField(help_text='加载器文件', upload_to='upload/sapiloader/%Y/%m/%d', verbose_name='加载器文件')),
                ('sapiloader_version', models.CharField(help_text='superctl版本', max_length=50, verbose_name='superctl版本')),
                ('user', models.CharField(help_text='操作人', max_length=30, verbose_name='操作人')),
                ('comment', models.TextField(blank=True, help_text='备注', max_length=500, null=True, verbose_name='备注')),
                ('md5', models.CharField(blank=True, help_text='md5', max_length=50, null=True, verbose_name='MD5')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '版本-加载器版本',
                'verbose_name_plural': '版本-加载器版本',
            },
        ),
        migrations.CreateModel(
            name='superctlVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('superctl_version', models.CharField(help_text='superctl版本', max_length=50, verbose_name='superctl版本')),
                ('superctl_file', models.FileField(help_text='superctl文件', upload_to='upload/superctl/%Y/%m/%d', verbose_name='superctl文件')),
                ('user', models.CharField(help_text='操作人', max_length=30, verbose_name='操作人')),
                ('comment', models.TextField(blank=True, help_text='备注', max_length=500, null=True, verbose_name='备注')),
                ('md5', models.CharField(blank=True, help_text='md5', max_length=50, null=True, verbose_name='MD5')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '版本-superctl版本',
                'verbose_name_plural': '版本-superctl版本',
            },
        ),
        migrations.CreateModel(
            name='superdcfVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('superdcf_version', models.CharField(help_text='superdcf版本', max_length=50, verbose_name='superdcf版本')),
                ('superdcf_file', models.FileField(help_text='superdcf文件', upload_to='upload/superdcf/%Y/%m/%d', verbose_name='superdcf文件')),
                ('user', models.CharField(help_text='操作人', max_length=30, verbose_name='操作人')),
                ('md5', models.CharField(blank=True, help_text='md5', max_length=50, null=True, verbose_name='MD5')),
                ('comment', models.TextField(blank=True, help_text='备注', max_length=500, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '版本-superd配置文件版本',
                'verbose_name_plural': '版本-superd配置文件版本',
            },
        ),
        migrations.CreateModel(
            name='supertackVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supertack_version', models.CharField(help_text='supertack版本', max_length=50, verbose_name='supertack版本')),
                ('supertack_file', models.FileField(help_text='supertack文件', upload_to='upload/supertack/%Y/%m/%d', verbose_name='supertack文件')),
                ('user', models.CharField(help_text='操作人', max_length=30, verbose_name='操作人')),
                ('comment', models.TextField(blank=True, help_text='备注', max_length=500, null=True, verbose_name='备注')),
                ('md5', models.CharField(blank=True, help_text='md5', max_length=50, null=True, verbose_name='MD5')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '版本-supertack版本',
                'verbose_name_plural': '版本-supertack版本',
            },
        ),
        migrations.CreateModel(
            name='version_contorl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rom_version', models.CharField(help_text='固件版本', max_length=100, verbose_name='固件版本')),
                ('docking_solution', models.CharField(choices=[('1.0', '1.0'), ('1.5', '1.5'), ('2.0', '2.0'), ('2.5', '2.5'), ('3.0', '3.0')], default='1.0', help_text='对接方案', max_length=32, verbose_name='对接方案')),
                ('superd_version', models.CharField(help_text='superd基线版本', max_length=100, verbose_name='superd基线版本')),
                ('pack_type', models.CharField(choices=[('gzip', 'gzip'), ('lzma', 'lzma')], help_text='压缩方式', max_length=30, verbose_name='压缩方式')),
                ('user', models.CharField(help_text='操作人', max_length=50, verbose_name='操作人')),
                ('comment', models.TextField(blank=True, help_text='备注', max_length=500, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('dev_model_id', models.ForeignKey(help_text='设备型号id', on_delete=django.db.models.deletion.CASCADE, related_name='vc_dev_model_id', to='appack.dev_model')),
                ('sapiloader_version_id', models.ForeignKey(blank=True, help_text='加载器版本', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sapiloader_version_id', to='appack.sapiloaderVersion')),
                ('superctl_version_id', models.ForeignKey(blank=True, help_text='superctl版本', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='superctl_version_id', to='appack.superctlVersion')),
                ('superdcf_version_id', models.ForeignKey(blank=True, help_text='superdcf版本', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='superdcf_version_id', to='appack.superdcfVersion')),
                ('supertack_version_id', models.ForeignKey(blank=True, help_text='supertack版本', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supertack_version_id', to='appack.supertackVersion')),
            ],
            options={
                'verbose_name': '版本-控制表',
                'verbose_name_plural': '版本-控制表',
            },
        ),
        migrations.AddField(
            model_name='dev_model',
            name='oem_id',
            field=models.ForeignKey(help_text='厂商id', max_length=50, on_delete=django.db.models.deletion.CASCADE, related_name='ps_oem_id', to='appack.oem'),
        ),
        migrations.AddField(
            model_name='build_log',
            name='dev_model_id',
            field=models.ForeignKey(help_text='设备id', max_length=50, on_delete=django.db.models.deletion.CASCADE, related_name='ps_dev_model_id', to='appack.dev_model'),
        ),
    ]
